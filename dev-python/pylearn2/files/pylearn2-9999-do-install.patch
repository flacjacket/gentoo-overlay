diff --git a/setup.py b/setup.py
index 831864b..d7af49a 100644
--- a/setup.py
+++ b/setup.py
@@ -34,39 +34,6 @@ else:
     ext_modules = []
 
 
-# Inform user of setup.py develop preference
-class pylearn2_install(install):
-    def run(self):
-        print("Because Pylearn2 is under heavy development, we generally do "
-              "not advice using the `setup.py install` command. Please "
-              "consider using the `setup.py develop` command instead for the "
-              "following reasons:\n\n1. Using `setup.py install` creates a "
-              "copy of the Pylearn2 source code in your Python installation "
-              "path. In order to update Pylearn2 afterwards you will need to "
-              "rerun `setup.py install` (!). Simply using `git pull` to "
-              "update your local copy of Pylearn2 code will not suffice. \n\n"
-              "2. When using `sudo` to install Pylearn2, all files, "
-              "including the tutorials, will be copied to a directory owned "
-              "by root. Not only is running tutorials as root unsafe, it "
-              "also means that all Pylearn2-related environment variables "
-              "which were defined for the user will be unavailable.\n\n"
-              "Pressing enter will continue the installation of Pylearn2 in "
-              "`develop` mode instead. Note that this means that you need to "
-              "keep this folder with the Pylearn2 code in its current "
-              "location. If you know what you are doing, and are very sure "
-              "that you want to install Pylearn2 using the `install` "
-              "command instead, please type `install`.\n")
-        mode = None
-        while mode not in ['', 'install', 'develop', 'cancel']:
-            if mode is not None:
-                print("Please try again")
-            mode = input("Installation mode: [develop]/install/cancel: ")
-        if mode in ['', 'develop']:
-            self.distribution.run_command('develop')
-        if mode == 'install':
-            return install.run(self)
-cmdclass.update({'install': pylearn2_install})
-
 setup(
     cmdclass=cmdclass,
     ext_modules=ext_modules,
